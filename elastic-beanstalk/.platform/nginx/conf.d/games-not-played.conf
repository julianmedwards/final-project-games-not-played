map $http_upgrade $connection_upgrade {
    default       "upgrade";
}

# Redirect http requests to https and accept ACME challenges for SSL cert.
server {
    listen 80;
    server_name DOMAINREPLACEME;

    #for ssl ACME challenges (renewal process)
    location ^~ /.well-known/acme-challenge {
        allow all;
        root /var/lib/nginx/DOMAINREPLACEME;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Actual SSL protected proxy server
server {
    listen 443 ssl http2;
    server_name DOMAINREPLACEME;

    ssl_certificate /etc/nginx/pki/DOMAINREPLACEME.crt;
    ssl_certificate_key /etc/nginx/pki/private/DOMAINREPLACEME.key;
    
    ssl_session_cache    shared:SSL:5m;
    ssl_session_timeout 5m;
    
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    access_log  /var/log/nginx/access.log   main;

    location / {
        proxy_pass http://127.0.0.1:APIPORTREPLACEME;
        proxy_http_version 1.1;
        
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }

    # Include the Elastic Beanstalk generated locations
    include elasticbeanstalk/*.conf;
}