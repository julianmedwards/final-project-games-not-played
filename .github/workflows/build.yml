name: Build client and server source

on:
  # Can be manually run or called by other workflows
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install workspace root dependencies
      - name: Install dependencies
        run: pnpm install

      # Build both the client and server packages
      - name: Build
        run: pnpm run build

      # Package the client's build output into an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'packages/client/dist'

      # Package the server for deployment to EBS
      - name: Build EBS package
        working-directory: ./elastic-beanstalk
        run: |
          chmod +x build.sh; \
          ./build.sh

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::173624809884:role/GithubActionsAutomatorECR
          aws-region: us-east-2
          output-credentials: 'true'

      # Login to AWS ECR
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: '173624809884'
          mask-password: 'true'

      # Build and push the server image to ECR
      - name: Build and push the server image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: games-not-played-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f ./packages/server/Dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
